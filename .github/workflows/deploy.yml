name: CI/CD for Rotiapp

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-deploy:
    strategy:
      matrix:
        os: [ubuntu-latest]
        node: [16, 20]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Set up Node.js 20
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node }}

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12.1'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        python manage.py test

    - name: Deploy to Hostinger
      if: success()
      env:
        SSH_PRIVATE_KEY: ${{ secrets.HOSTINGER_SSH_KEY }}
        HOST: ${{ secrets.HOSTINGER_SERVER_IP }}
        USER: ${{ secrets.HOSTINGER_SSH_USER }}
        APP_DIR: /opt/rotiapp
        SECRET_KEY: ${{ secrets.SECRET_KEY }}       
        DEBUG: 'False'
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H $HOST >> ~/.ssh/known_hosts

        ssh $USER@$HOST <<EOF
          cd $APP_DIR
          git config --global --add safe.directory $APP_DIR
          git pull origin master
          pyenv activate rotiapp
          pip install -r requirements.txt
          python manage.py migrate
          python manage.py collectstatic --noinput
          sudo supervisorctl restart rotiapp:
        EOF